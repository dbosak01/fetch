% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specs.R
\encoding{UTF-8}
\name{specs}
\alias{specs}
\title{Create an Import Spec Collection}
\usage{
specs(..., na = c("", "NA"), trim_ws = TRUE)
}
\arguments{
\item{...}{Named input specs.  The name should correspond to the file name,
without the file extension.
The spec is defined as an \code{import_spec} object.  See the 
\code{\link{import_spec}} function for additional information on 
parameters for that object.}

\item{na}{A vector of values to be treated as NA.  For example, the 
vector \code{c('', ' ')} will cause empty strings and single blanks to 
be converted to NA values. For most file types, 
empty strings and the string 'NA' \code{('', 'NA')} are considered NA.  
For SASÂ® datasets and transport files, a single blank and a single dot 
\code{c(" ", ".")} are considered NA. The value of the 
\code{na} parameter on the \code{specs} function can be overridden
by the \code{na} parameter on the \code{import_spec} function.}

\item{trim_ws}{Whether or not to trim white space from the input data values.
Valid values are TRUE, and FALSE.  Default is TRUE.  The value of the 
\code{trim_ws} parameter on the \code{specs} function can be overridden
by the \code{trim_ws} parameter on the \code{import_spec} function.}
}
\value{
The import specifications object.
}
\description{
A function to capture a set of import specifications for a 
directory of data files.  These specs can be used on the 
\code{\link{fetch}} function to correctly assign the data types for 
imported data files. The 
import engines will guess at the data types for any columns that
are not explicitly defined in the import specifications. Import
specifications are defined with the \code{\link{import_spec}} function.
The import spec syntax is the same for all data engines.

Note that the \code{na} and \code{trim_ws} parameters on the \code{specs} 
function will be applied globally to all files in the library.  
These global settings can be overridden on the \code{\link{import_spec}} 
for any particular data file. 

Also note that the \code{specs} collection is defined as an object 
so it can be stored and reused.
See the \code{\link{write.specs}} and \code{\link{read.specs}} functions
for additional information on saving specs.
}
\examples{
# Create temp path
tmp <- file.path(tempdir(), "mtcars.csv")
}
\seealso{
\code{\link{catalog}} to create a data catalog, 
\code{\link{fetch}} for retrieving data, and 
\code{\link{import_spec}} for additional information on defining an 
import spec.

Other specs: 
\code{\link{import_spec}()},
\code{\link{print.specs}()},
\code{\link{read.specs}()},
\code{\link{write.specs}()}
}
\concept{specs}
