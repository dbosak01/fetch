[{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"key-features","dir":"Articles","previous_headings":"","what":"Key Features","title":"fetch","text":"fetch package allows retrieve data several different data sources minimizing memory usage. two steps retrieve data: Create data catalog Fetch data catalog two steps accomplished following functions: catalog(): Defines data catalog particular data source fetch(): Pulls data item catalog loads memory package following key features: catalog() function allows explore data reading source. fetch() function loads data need analysis. “” parameter catalog() function allows subset across datasets catalog. “select” “top” parameters fetch() function let limit data returned. “import_spec” parameters catalog() fetch() functions give control column data types.","code":""},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"how-to-use-fetch","dir":"Articles","previous_headings":"","what":"How to use fetch","title":"fetch","text":"Let’s start simple example. example create data catalog, examine contents, fetch dataset catalog. First, create view data catalog: can seen , catalog 6 csv files . number columns rows displayed file. Information file contained catalog. information can accessed using list notion, like : catalog item printed, shows data dictionary specified dataset. Column names data types displayed, along useful attributes data. catalog created, ready fetch data catalog: point, can proceed analysis, fetch additional datasets catalog needed. easy!","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create catalog ct <- catalog(pkg, engines$csv)  # View catalog ct # data catalog: 6 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Items:     # data item 'ADAE': 56 cols 150 rows     # data item 'ADEX': 17 cols 348 rows     # data item 'ADPR': 37 cols 552 rows     # data item 'ADPSGA': 42 cols 695 rows     # data item 'ADSL': 56 cols 87 rows     # data item 'ADVS': 37 cols 3617 rows # View info for catalog item  ct$ADEX # data item 'ADEX': 17 cols 348 rows # - Engine: csv # - Size: 70.7 Kb # - Last Modified: 2020-09-18 14:30:22 #    Name   Column     Class Label Format NAs MaxChar # 1  ADEX  STUDYID character  <NA>     NA   0       3 # 2  ADEX  USUBJID character  <NA>     NA   0      10 # 3  ADEX   SUBJID character  <NA>     NA   0       3 # 4  ADEX   SITEID character  <NA>     NA   0       2 # 5  ADEX     TRTP character  <NA>     NA   8       5 # 6  ADEX    TRTPN   numeric  <NA>     NA   8       1 # 7  ADEX     TRTA character  <NA>     NA   8       5 # 8  ADEX    TRTAN   numeric  <NA>     NA   8       1 # 9  ADEX   RANDFL character  <NA>     NA   0       1 # 10 ADEX    SAFFL character  <NA>     NA   0       1 # 11 ADEX   MITTFL character  <NA>     NA   0       1 # 12 ADEX  PPROTFL character  <NA>     NA   0       1 # 13 ADEX    PARAM character  <NA>     NA   0      45 # 14 ADEX  PARAMCD character  <NA>     NA   0       8 # 15 ADEX   PARAMN   numeric  <NA>     NA   0       1 # 16 ADEX     AVAL   numeric  <NA>     NA  16       4 # 17 ADEX AVALCAT1 character  <NA>     NA  87      10 # Fetch data from a catalog dt <- fetch(ct$ADEX)  # View data dt # A tibble: 348 × 17 #    STUDYID USUBJID    SUBJID SITEID TRTP  TRTPN TRTA  TRTAN RANDFL SAFFL MITTFL PPROTFL #    <chr>   <chr>      <chr>  <chr>  <chr> <dbl> <chr> <dbl> <chr>  <chr> <chr>  <chr>   #  1 ABC     ABC-01-049 049    01     ARM D     4 ARM D     4 Y      Y     Y      Y       #  2 ABC     ABC-01-049 049    01     ARM D     4 ARM D     4 Y      Y     Y      Y       #  3 ABC     ABC-01-049 049    01     ARM D     4 ARM D     4 Y      Y     Y      Y       #  4 ABC     ABC-01-049 049    01     ARM D     4 ARM D     4 Y      Y     Y      Y       #  5 ABC     ABC-01-050 050    01     ARM B     2 ARM B     2 Y      Y     Y      Y       #  6 ABC     ABC-01-050 050    01     ARM B     2 ARM B     2 Y      Y     Y      Y       #  7 ABC     ABC-01-050 050    01     ARM B     2 ARM B     2 Y      Y     Y      Y       #  8 ABC     ABC-01-050 050    01     ARM B     2 ARM B     2 Y      Y     Y      Y       #  9 ABC     ABC-01-051 051    01     ARM A     1 ARM A     1 Y      Y     Y      Y       # 10 ABC     ABC-01-051 051    01     ARM A     1 ARM A     1 Y      Y     Y      Y       #  338 more rows #  5 more variables: PARAM <chr>, PARAMCD <chr>, PARAMN <dbl>, AVAL <dbl>, #   AVALCAT1 <chr> #  Use `print(n = ...)` to see more rows"},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"additional-features","dir":"Articles","previous_headings":"","what":"Additional Features","title":"fetch","text":"example covers basics. Now let’s look useful features fetch package.","code":""},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"apply-a-where-expression-to-a-fetch-operation","dir":"Articles","previous_headings":"Additional Features","what":"Apply a Where Expression to a Fetch Operation","title":"fetch","text":"performing analysis subset data? way apply subset data fetched? can apply subset criteria using “” parameter fetch() function. Like : expression function can used define R expression. function accepts unquoted variable names, logical operators, R functions like .null() .na(). can use “” parameter expression narrow data working reduce memory footprint program.","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create catalog ct <- catalog(pkg, engines$csv)  # Subset data for a specific subject dt <- fetch(ct$ADVS, where = expression(SUBJID == '049'))  # View data subset dt # A tibble: 44 × 37 #    STUDYID USUBJID    SUBJID SITEID SRCDOM SRCVAR   SRCSEQ TRTP  TRTPN TRTA  TRTAN RANDFL #    <chr>   <chr>      <chr>  <chr>  <chr>  <chr>     <dbl> <chr> <dbl> <chr> <dbl> <chr>  #  1 ABC     ABC-01-049 049    01     VS     VSSTRESN      9 ARM D     4 ARM D     4 Y      #  2 ABC     ABC-01-049 049    01     VS     VSSTRESN     41 ARM D     4 ARM D     4 Y      #  3 ABC     ABC-01-049 049    01     NA     NA           NA ARM D     4 ARM D     4 Y      #  4 ABC     ABC-01-049 049    01     VS     VSSTRESN     34 ARM D     4 ARM D     4 Y      #  5 ABC     ABC-01-049 049    01     VS     VSSTRESN     35 ARM D     4 ARM D     4 Y      #  6 ABC     ABC-01-049 049    01     VS     VSSTRESN     36 ARM D     4 ARM D     4 Y      #  7 ABC     ABC-01-049 049    01     VS     VSSTRESN     37 ARM D     4 ARM D     4 Y      #  8 ABC     ABC-01-049 049    01     VS     VSSTRESN     38 ARM D     4 ARM D     4 Y      #  9 ABC     ABC-01-049 049    01     VS     VSSTRESN     39 ARM D     4 ARM D     4 Y      # 10 ABC     ABC-01-049 049    01     VS     VSSTRESN     40 ARM D     4 ARM D     4 Y      #  34 more rows #  25 more variables: SAFFL <chr>, MITTFL <chr>, PPROTFL <chr>, TRTSDT <chr>, #   TRTEDT <chr>, ADT <chr>, ADY <dbl>, ADTF <lgl>, AVISIT <chr>, AVISITN <dbl>, #   PARAM <chr>, PARAMCD <chr>, PARAMN <dbl>, PARAMTYP <chr>, AVAL <dbl>, BASE <dbl>, #   CHG <dbl>, AWRANGE <chr>, AWTARGET <dbl>, AWTDIFF <dbl>, AWLO <dbl>, AWHI <dbl>, #   AWU <chr>, ABLFL <chr>, ANL01FL <chr> #  Use `print(n = ...)` to see more rows"},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"get-top-n-rows","dir":"Articles","previous_headings":"Additional Features","what":"Get Top N Rows","title":"fetch","text":"Another way limit data returned program use “top” parameter. parameter allows return “top N” number rows target data item. “top” parameter useful exploratory purposes. example: fetch returned top 5 rows dataset subject ‘049’. Note “top” parameter can used without “” parameter.","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create catalog ct <- catalog(pkg, engines$csv)  # Subset data for a specific subject dt <- fetch(ct$ADVS, top = 5, where = expression(SUBJID == '049'))  # View results dt # A tibble: 5 × 37 #   STUDYID USUBJID  SUBJID SITEID SRCDOM SRCVAR SRCSEQ TRTP  TRTPN TRTA  TRTAN RANDFL SAFFL #   <chr>   <chr>    <chr>  <chr>  <chr>  <chr>   <dbl> <chr> <dbl> <chr> <dbl> <chr>  <chr> # 1 ABC     ABC-01-… 049    01     VS     VSSTR…      9 ARM D     4 ARM D     4 Y      Y     # 2 ABC     ABC-01-… 049    01     VS     VSSTR…     41 ARM D     4 ARM D     4 Y      Y     # 3 ABC     ABC-01-… 049    01     NA     NA         NA ARM D     4 ARM D     4 Y      Y     # 4 ABC     ABC-01-… 049    01     VS     VSSTR…     34 ARM D     4 ARM D     4 Y      Y     # 5 ABC     ABC-01-… 049    01     VS     VSSTR…     35 ARM D     4 ARM D     4 Y      Y     #   24 more variables: MITTFL <chr>, PPROTFL <chr>, TRTSDT <chr>, TRTEDT <chr>, #   ADT <chr>, ADY <dbl>, ADTF <lgl>, AVISIT <chr>, AVISITN <dbl>, PARAM <chr>, #   PARAMCD <chr>, PARAMN <dbl>, PARAMTYP <chr>, AVAL <dbl>, BASE <dbl>, CHG <dbl>, #   AWRANGE <chr>, AWTARGET <dbl>, AWTDIFF <dbl>, AWLO <dbl>, AWHI <dbl>, AWU <chr>, #   ABLFL <chr>, ANL01FL <chr>"},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"apply-a-pattern-to-a-catalog","dir":"Articles","previous_headings":"Additional Features","what":"Apply a Pattern to a Catalog","title":"fetch","text":"previous examples loaded datasets data source data catalog. may instances, however, large number datasets, want limit data items loaded catalog. situation, can use “pattern” parameter catalog() function, like : example limits items catalog “S” name. realistic example, nevertheless demonstrates “pattern” parameter can used reduce datasets loaded catalog.","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create catalog, applying pattern to dataset names ct <- catalog(pkg, engines$csv, pattern = \"*S*\")  # View catalog ct # data catalog: 3 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Pattern: *S* # - Items: # data item 'ADPSGA': 42 cols 695 rows # data item 'ADSL': 56 cols 87 rows # data item 'ADVS': 37 cols 3617 rows"},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"apply-a-where-expression-to-an-entire-catalog","dir":"Articles","previous_headings":"Additional Features","what":"Apply a Where Expression to an Entire Catalog","title":"fetch","text":"Sometimes want subset datasets catalog. subset can accomplished “” parameter catalog() function. Observe: Notice expression added data item catalog, row counts item reduced. Now let’s fetch data catalog: can see, ADVS ADSL datasets subset subject ‘049’. feature fetch package makes easy target just rows looking .","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create catalog without where expression ct1 <- catalog(pkg, engines$csv)  # View catalog ct1 # data catalog: 6 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Items: # data item 'ADAE': 56 cols 150 rows # data item 'ADEX': 17 cols 348 rows # data item 'ADPR': 37 cols 552 rows # data item 'ADPSGA': 42 cols 695 rows # data item 'ADSL': 56 cols 87 rows # data item 'ADVS': 37 cols 3617 rows  # Create catalog with where expression ct2 <- catalog(pkg, engines$csv, where = expression(SUBJID == '049'))  # View catalog ct2 # data catalog: 6 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Where: SUBJID == \"049\" # - Items: # # data item 'ADAE': 56 cols 5 rows # - Where: SUBJID == \"049\" # # data item 'ADEX': 17 cols 4 rows # - Where: SUBJID == \"049\" # # data item 'ADPR': 37 cols 7 rows # - Where: SUBJID == \"049\" # # data item 'ADPSGA': 42 cols 10 rows # - Where: SUBJID == \"049\" # # data item 'ADSL': 56 cols 1 rows # - Where: SUBJID == \"049\" # # data item 'ADVS': 37 cols 44 rows # - Where: SUBJID == \"049\" # Subset data for a specific subject dt1 <- fetch(ct2$ADVS)  # View results of ADVS fetch dt1 # A tibble: 44 × 37 #    STUDYID USUBJID    SUBJID SITEID SRCDOM SRCVAR   SRCSEQ TRTP  TRTPN TRTA  TRTAN RANDFL SAFFL #    <chr>   <chr>      <chr>  <chr>  <chr>  <chr>     <dbl> <chr> <dbl> <chr> <dbl> <chr>  <chr> #  1 ABC     ABC-01-049 049    01     VS     VSSTRESN      9 ARM D     4 ARM D     4 Y      Y     #  2 ABC     ABC-01-049 049    01     VS     VSSTRESN     41 ARM D     4 ARM D     4 Y      Y     #  3 ABC     ABC-01-049 049    01     NA     NA           NA ARM D     4 ARM D     4 Y      Y     #  4 ABC     ABC-01-049 049    01     VS     VSSTRESN     34 ARM D     4 ARM D     4 Y      Y     #  5 ABC     ABC-01-049 049    01     VS     VSSTRESN     35 ARM D     4 ARM D     4 Y      Y     #  6 ABC     ABC-01-049 049    01     VS     VSSTRESN     36 ARM D     4 ARM D     4 Y      Y     #  7 ABC     ABC-01-049 049    01     VS     VSSTRESN     37 ARM D     4 ARM D     4 Y      Y     #  8 ABC     ABC-01-049 049    01     VS     VSSTRESN     38 ARM D     4 ARM D     4 Y      Y     #  9 ABC     ABC-01-049 049    01     VS     VSSTRESN     39 ARM D     4 ARM D     4 Y      Y     # 10 ABC     ABC-01-049 049    01     VS     VSSTRESN     40 ARM D     4 ARM D     4 Y      Y     #  34 more rows #  24 more variables: MITTFL <chr>, PPROTFL <chr>, TRTSDT <chr>, TRTEDT <chr>, ADT <chr>, #   ADY <dbl>, ADTF <lgl>, AVISIT <chr>, AVISITN <dbl>, PARAM <chr>, PARAMCD <chr>, #   PARAMN <dbl>, PARAMTYP <chr>, AVAL <dbl>, BASE <dbl>, CHG <dbl>, AWRANGE <chr>, #   AWTARGET <dbl>, AWTDIFF <dbl>, AWLO <dbl>, AWHI <dbl>, AWU <chr>, ABLFL <chr>, #   ANL01FL <chr> #  Use `print(n = ...)` to see more rows   # View results of ADSL fetch dt2 <- fetch(ct2$ADSL) # A tibble: 1 × 56 #   STUDYID USUBJID    SUBJID SITEID   AGE AGEU  AGEGR1   SEX   RACE  RACEN ETHNIC ETHNICN COUNTRY #   <chr>   <chr>      <chr>  <chr>  <dbl> <chr> <chr>    <chr> <chr> <dbl> <chr>    <dbl> <lgl>   # 1 ABC     ABC-01-049 049    01        39 YEARS 30-39 y… M     WHITE     5 NOT H…       2 NA      #   43 more variables: ARM <chr>, ACTARM <lgl>, TRT01P <chr>, TRT01PN <dbl>, TRT01A <chr>, #   TRT01AN <dbl>, TRTSDT <chr>, TRTEDT <chr>, TRTDURN <dbl>, TRTDURU <chr>, TR01SDT <chr>, #   TR01EDT <chr>, INCNFL <chr>, RANDFL <chr>, RANDEXC1 <lgl>, RANDEXC2 <chr>, RANDEXC3 <chr>, #   RANDEXC4 <chr>, SAFFL <chr>, SAFEXC1 <chr>, SAFEXC2 <chr>, MITTFL <chr>, MITTEXC1 <chr>, #   MITTEXC2 <chr>, PPROTFL <chr>, PPROTEX1 <chr>, PPROTEX2 <chr>, PPROTEX3 <chr>, #   PPROTEX4 <chr>, COMPLFL <chr>, STDYDISP <chr>, STDYREAS <chr>, INCNDT <chr>, RANDDT <chr>, #   DTHDT <lgl>, DTHFL <chr>, MISSDOSE <dbl>, TP1TRTR <chr>, TP2TRTR <chr>, TP3TRTR <chr>,..."},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"add-import-specifications-to-a-catalog","dir":"Articles","previous_headings":"Additional Features","what":"Add Import Specifications to a Catalog","title":"fetch","text":"data files contain accurate data type information within , others . example, CSV files contain data type information, RDATA files . data type information available, data engine try guess data types. However, always guess accurately. Sometimes need help data engine determine data type column supposed . Import specs allow specify correct data type column. Examine dictionary ADVS dataset: Note data types “TRTSDT” “TRTEDT” listed character. fact, columns supposed date. can force date data type assignment import spec, follows: Observe columns “TRTSDT” “TRTEDT” now converted Date columns. import spec apply “TRTSDT” “TRTEDT” columns datasets. format “%d%b%Y” written specifically read data value files uses. See import_spec() documentation information data formats, possible data type specifications. Also see specs() documentation want assign unique import specifications data item catalog.","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create catalog without import spec ct <- catalog(pkg, engines$csv)  # View dictionary for ADVS ct$ADVS # data item 'ADVS': 37 cols 3617 rows # - Engine: csv # - Size: 1.1 Mb # - Last Modified: 2020-09-18 14:30:22 #    Name   Column     Class Label Format  NAs MaxChar # 1  ADVS  STUDYID character  <NA>     NA    0       3 # 2  ADVS  USUBJID character  <NA>     NA    0      10 # 3  ADVS   SUBJID character  <NA>     NA    0       3 # 4  ADVS   SITEID character  <NA>     NA    0       2 # 5  ADVS   SRCDOM character  <NA>     NA   85       2 # 6  ADVS   SRCVAR character  <NA>     NA   85       8 # 7  ADVS   SRCSEQ   numeric  <NA>     NA   85       2 # 8  ADVS     TRTP character  <NA>     NA   85       5 # 9  ADVS    TRTPN   numeric  <NA>     NA   85       1 # 10 ADVS     TRTA character  <NA>     NA   85       5 # 11 ADVS    TRTAN   numeric  <NA>     NA   85       1 # 12 ADVS   RANDFL character  <NA>     NA    0       1 # 13 ADVS    SAFFL character  <NA>     NA    0       1 # 14 ADVS   MITTFL character  <NA>     NA    0       1 # 15 ADVS  PPROTFL character  <NA>     NA    0       1 # 16 ADVS   TRTSDT character  <NA>     NA   54       9 # Character by default # 17 ADVS   TRTEDT character  <NA>     NA  119       9 # Character by default # 18 ADVS      ADT character  <NA>     NA    0       9 # 19 ADVS      ADY   numeric  <NA>     NA   54       4 # 20 ADVS     ADTF   logical  <NA>     NA 3617       0 # 21 ADVS   AVISIT character  <NA>     NA   50      14 # 22 ADVS  AVISITN   numeric  <NA>     NA   50       2 # 23 ADVS    PARAM character  <NA>     NA    0      35 # 24 ADVS  PARAMCD character  <NA>     NA    0       6 # 25 ADVS   PARAMN   numeric  <NA>     NA    0       1 # 26 ADVS PARAMTYP character  <NA>     NA 3532       7 # 27 ADVS     AVAL   numeric  <NA>     NA    0       5 # 28 ADVS     BASE   numeric  <NA>     NA   70       5 # 29 ADVS      CHG   numeric  <NA>     NA 1312       4 # 30 ADVS  AWRANGE character  <NA>     NA 1331      25 # 31 ADVS AWTARGET   numeric  <NA>     NA 1331       3 # 32 ADVS  AWTDIFF   numeric  <NA>     NA 1331       2 # 33 ADVS     AWLO   numeric  <NA>     NA 1331       3 # 34 ADVS     AWHI   numeric  <NA>     NA 1331       3 # 35 ADVS      AWU character  <NA>     NA 1331       4 # 36 ADVS    ABLFL character  <NA>     NA 2869       1 # 37 ADVS  ANL01FL character  <NA>     NA  448       1 # Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create import spec spc <- import_spec(TRTSDT = \"date=%d%b%Y\",                    TRTEDT = \"date=%d%b%Y\")  # Create catalog with import spec ct <- catalog(pkg, engines$csv, import_specs = spc)  # View dictionary for ADVS with Import Spec ct$ADVS # data item 'ADVS': 37 cols 3617 rows # - Engine: csv # - Size: 1.1 Mb # - Last Modified: 2020-09-18 14:30:22 #    Name   Column     Class Label Format  NAs MaxChar # 1  ADVS  STUDYID character  <NA>     NA    0       3 # 2  ADVS  USUBJID character  <NA>     NA    0      10 # 3  ADVS   SUBJID character  <NA>     NA    0       3 # 4  ADVS   SITEID character  <NA>     NA    0       2 # 5  ADVS   SRCDOM character  <NA>     NA   85       2 # 6  ADVS   SRCVAR character  <NA>     NA   85       8 # 7  ADVS   SRCSEQ   numeric  <NA>     NA   85       2 # 8  ADVS     TRTP character  <NA>     NA   85       5 # 9  ADVS    TRTPN   numeric  <NA>     NA   85       1 # 10 ADVS     TRTA character  <NA>     NA   85       5 # 11 ADVS    TRTAN   numeric  <NA>     NA   85       1 # 12 ADVS   RANDFL character  <NA>     NA    0       1 # 13 ADVS    SAFFL character  <NA>     NA    0       1 # 14 ADVS   MITTFL character  <NA>     NA    0       1 # 15 ADVS  PPROTFL character  <NA>     NA    0       1 # 16 ADVS   TRTSDT      Date  <NA>     NA   54      10 # Converted to Date  # 17 ADVS   TRTEDT      Date  <NA>     NA  119      10 # Converted to Date # 18 ADVS      ADT character  <NA>     NA    0       9 # 19 ADVS      ADY   numeric  <NA>     NA   54       4 # 20 ADVS     ADTF   logical  <NA>     NA 3617       0 # 21 ADVS   AVISIT character  <NA>     NA   50      14 # 22 ADVS  AVISITN   numeric  <NA>     NA   50       2 # 23 ADVS    PARAM character  <NA>     NA    0      35 # 24 ADVS  PARAMCD character  <NA>     NA    0       6 # 25 ADVS   PARAMN   numeric  <NA>     NA    0       1 # 26 ADVS PARAMTYP character  <NA>     NA 3532       7 # 27 ADVS     AVAL   numeric  <NA>     NA    0       5 # 28 ADVS     BASE   numeric  <NA>     NA   70       5 # 29 ADVS      CHG   numeric  <NA>     NA 1312       4 # 30 ADVS  AWRANGE character  <NA>     NA 1331      25 # 31 ADVS AWTARGET   numeric  <NA>     NA 1331       3 # 32 ADVS  AWTDIFF   numeric  <NA>     NA 1331       2 # 33 ADVS     AWLO   numeric  <NA>     NA 1331       3 # 34 ADVS     AWHI   numeric  <NA>     NA 1331       3 # 35 ADVS      AWU character  <NA>     NA 1331       4 # 36 ADVS    ABLFL character  <NA>     NA 2869       1 # 37 ADVS  ANL01FL character  <NA>     NA  448       1"},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"add-import-specifications-to-a-fetch","dir":"Articles","previous_headings":"Additional Features","what":"Add Import Specifications to a Fetch","title":"fetch","text":"may also add import specification fetch operation. import specification defined import_spec() function way catalog operation: results operation similar previous example, applied import spec catalog. difference now import spec applies specific fetch operation, entire catalog.","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")   # Create import spec spc <- import_spec(TRTSDT = \"date=%d%b%Y\",                    TRTEDT = \"date=%d%b%Y\")  # Create catalog with import spec ct <- catalog(pkg, engines$csv, import_specs = spc)  # View dictionary for ADVS with Import Spec ct$ADVS # data item 'ADVS': 37 cols 3617 rows # - Engine: csv # - Size: 1.1 Mb # - Last Modified: 2020-09-18 14:30:22 #    Name   Column     Class Label Format  NAs MaxChar # 1  ADVS  STUDYID character  <NA>     NA    0       3 # 2  ADVS  USUBJID character  <NA>     NA    0      10 # 3  ADVS   SUBJID character  <NA>     NA    0       3 # 4  ADVS   SITEID character  <NA>     NA    0       2 # 5  ADVS   SRCDOM character  <NA>     NA   85       2 # 6  ADVS   SRCVAR character  <NA>     NA   85       8 # 7  ADVS   SRCSEQ   numeric  <NA>     NA   85       2 # 8  ADVS     TRTP character  <NA>     NA   85       5 # 9  ADVS    TRTPN   numeric  <NA>     NA   85       1 # 10 ADVS     TRTA character  <NA>     NA   85       5 # 11 ADVS    TRTAN   numeric  <NA>     NA   85       1 # 12 ADVS   RANDFL character  <NA>     NA    0       1 # 13 ADVS    SAFFL character  <NA>     NA    0       1 # 14 ADVS   MITTFL character  <NA>     NA    0       1 # 15 ADVS  PPROTFL character  <NA>     NA    0       1 # 16 ADVS   TRTSDT      Date  <NA>     NA   54      10 # 17 ADVS   TRTEDT      Date  <NA>     NA  119      10 # 18 ADVS      ADT character  <NA>     NA    0       9 # 19 ADVS      ADY   numeric  <NA>     NA   54       4 # 20 ADVS     ADTF   logical  <NA>     NA 3617       0 # 21 ADVS   AVISIT character  <NA>     NA   50      14 # 22 ADVS  AVISITN   numeric  <NA>     NA   50       2 # 23 ADVS    PARAM character  <NA>     NA    0      35 # 24 ADVS  PARAMCD character  <NA>     NA    0       6 # 25 ADVS   PARAMN   numeric  <NA>     NA    0       1 # 26 ADVS PARAMTYP character  <NA>     NA 3532       7 # 27 ADVS     AVAL   numeric  <NA>     NA    0       5 # 28 ADVS     BASE   numeric  <NA>     NA   70       5 # 29 ADVS      CHG   numeric  <NA>     NA 1312       4 # 30 ADVS  AWRANGE character  <NA>     NA 1331      25 # 31 ADVS AWTARGET   numeric  <NA>     NA 1331       3 # 32 ADVS  AWTDIFF   numeric  <NA>     NA 1331       2 # 33 ADVS     AWLO   numeric  <NA>     NA 1331       3 # 34 ADVS     AWHI   numeric  <NA>     NA 1331       3 # 35 ADVS      AWU character  <NA>     NA 1331       4 # 36 ADVS    ABLFL character  <NA>     NA 2869       1 # 37 ADVS  ANL01FL character  <NA>     NA  448       1"},{"path":"https://fetch.r-sassy.org/articles/fetch.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"fetch","text":"next steps, suggested play around fetch functions, note easy functions use. may also wish review documentation catalog(), fetch(), import_spec() functions. documentation contains additional examples descriptions parameters.","code":""},{"path":"https://fetch.r-sassy.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Bosak. Author, maintainer. Raphael Huang. Contributor. Kevin Kramer. Contributor. Archytas Clinical Solutions. Copyright holder.","code":""},{"path":"https://fetch.r-sassy.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bosak D (2023). fetch: Fetch Data Various Data Sources. R package version 0.1.0, https://fetch.r-sassy.org.","code":"@Manual{,   title = {fetch: Fetch Data From Various Data Sources},   author = {David Bosak},   year = {2023},   note = {R package version 0.1.0},   url = {https://fetch.r-sassy.org}, }"},{"path":"https://fetch.r-sassy.org/index.html","id":"introduction-to-fetch","dir":"","previous_headings":"","what":"Fetch Data From Various Data Sources","title":"Fetch Data From Various Data Sources","text":"Many R programs require multiple input datasets. purpose fetch package make easier access multiple datasets R program. package allows load catalog datasets directory, load desired dataset needed program. method minimizes memory used data.","code":""},{"path":"https://fetch.r-sassy.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fetch Data From Various Data Sources","text":"fetch package can installed console. Simply run following command: want latest development version, can install directly github: put following line top program script: fetch package give access number functions import data programs easily efficiently. examples usage information, visit fetch documentation site .","code":"install.packages(\"fetch\") devtools::install_github(\"https://github.com/dbosak01/fetch\") library(fetch)"},{"path":"https://fetch.r-sassy.org/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Fetch Data From Various Data Sources","text":"need help, first place turn fetch web site. web site full documentation fetch functions. want look code fetch package, visit github page . encounter bug feature request, please submit issue .","code":""},{"path":"https://fetch.r-sassy.org/index.html","id":"see-also","dir":"","previous_headings":"","what":"See Also","title":"Fetch Data From Various Data Sources","text":"sassy meta-package includes several packages help make R easier everyone. can read sassy package .","code":""},{"path":"https://fetch.r-sassy.org/reference/catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data source catalog — catalog","title":"Create a data source catalog — catalog","text":"catalog function returns data catalog data source. data catalog like collection data dictionaries datasets data source.  catalog allows  examine datasets data source without yet loading anything memory.  decide data items want load,  use fetch function load item memory.","code":""},{"path":"https://fetch.r-sassy.org/reference/catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data source catalog — catalog","text":"","code":"catalog(source, engine, pattern = NULL, where = NULL, import_specs = NULL)"},{"path":"https://fetch.r-sassy.org/reference/catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data source catalog — catalog","text":"source source data.  parameter required. Normally source passed full relative path. engine data engine use data source. parameter required. available data engines available engines enumeration.  example, engines$csv specify CSV engine,  engines$rdata specify RDATA engine. pattern pattern use loading data items data source. pattern can name vector names.  Names also accept wildcards. supplied pattern used filter data items loaded catalog.  example, pattern pattern = \"AD*\" load datasets start \"AD\". expression use fetching  data. expression apply fetch operations catalog. expression defined Base R expression function.  expression unquoted can use Base R operators functions. import_specs import specs use fetch operation  catalog.  import spec can used control data types incoming columns. can create separate import specs  dataset, one import spec use datasets.  See import_spec  specs functions information capability.","code":""},{"path":"https://fetch.r-sassy.org/reference/catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data source catalog — catalog","text":"loaded data catalog.","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/reference/catalog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data source catalog — catalog","text":"","code":"# Get data directory pkg <- system.file(\"extdata\", package = \"fetch\")  # Create catalog ct <- catalog(pkg, engines$csv)  # Example 1: Catalog all rows  # View catalog ct # data catalog: 6 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Items:   # data item 'ADAE': 56 cols 150 rows   # data item 'ADEX': 17 cols 348 rows   # data item 'ADPR': 37 cols 552 rows   # data item 'ADPSGA': 42 cols 695 rows   # data item 'ADSL': 56 cols 87 rows   # data item 'ADVS': 37 cols 3617 rows  # View catalog item ct$ADEX # data item 'ADEX': 17 cols 348 rows # - Engine: csv # - Size: 70.7 Kb # - Last Modified: 2020-09-18 14:30:22 #    Name   Column     Class Label Format NAs MaxChar # 1  ADEX  STUDYID character  <NA>     NA   0       3 # 2  ADEX  USUBJID character  <NA>     NA   0      10 # 3  ADEX   SUBJID character  <NA>     NA   0       3 # 4  ADEX   SITEID character  <NA>     NA   0       2 # 5  ADEX     TRTP character  <NA>     NA   8       5 # 6  ADEX    TRTPN   numeric  <NA>     NA   8       1 # 7  ADEX     TRTA character  <NA>     NA   8       5 # 8  ADEX    TRTAN   numeric  <NA>     NA   8       1 # 9  ADEX   RANDFL character  <NA>     NA   0       1 # 10 ADEX    SAFFL character  <NA>     NA   0       1 # 11 ADEX   MITTFL character  <NA>     NA   0       1 # 12 ADEX  PPROTFL character  <NA>     NA   0       1 # 13 ADEX    PARAM character  <NA>     NA   0      45 # 14 ADEX  PARAMCD character  <NA>     NA   0       8 # 15 ADEX   PARAMN   numeric  <NA>     NA   0       1 # 16 ADEX     AVAL   numeric  <NA>     NA  16       4 # 17 ADEX AVALCAT1 character  <NA>     NA  87      10   # Example 2: Catalog with where expression ct <- catalog(pkg, engines$csv, where = expression(SUBJID == '049'))  # View catalog item - Now only 4 rows ct$ADEX # data item 'ADEX': 17 cols 4 rows #- Where: SUBJID == \"049\" #- Engine: csv #- Size: 4.5 Kb #- Last Modified: 2020-09-18 14:30:22 #Name   Column     Class Label Format NAs MaxChar #1  ADEX  STUDYID character  <NA>     NA   0       3 #2  ADEX  USUBJID character  <NA>     NA   0      10 #3  ADEX   SUBJID character  <NA>     NA   0       3 #4  ADEX   SITEID character  <NA>     NA   0       2 #5  ADEX     TRTP character  <NA>     NA   0       5 #6  ADEX    TRTPN   numeric  <NA>     NA   0       1 #7  ADEX     TRTA character  <NA>     NA   0       5 #8  ADEX    TRTAN   numeric  <NA>     NA   0       1 #9  ADEX   RANDFL character  <NA>     NA   0       1 #10 ADEX    SAFFL character  <NA>     NA   0       1 #11 ADEX   MITTFL character  <NA>     NA   0       1 #12 ADEX  PPROTFL character  <NA>     NA   0       1 #13 ADEX    PARAM character  <NA>     NA   0      45 #14 ADEX  PARAMCD character  <NA>     NA   0       8 #15 ADEX   PARAMN   numeric  <NA>     NA   0       1 #16 ADEX     AVAL   numeric  <NA>     NA   0       4 #17 ADEX AVALCAT1 character  <NA>     NA   1      10"},{"path":"https://fetch.r-sassy.org/reference/engines.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of engine types — engines","title":"A list of engine types — engines","text":"engines enumeration contains possible options \"engine\" parameter catalog function.  Use enumeration specify kind data like load. Options : csv, dbf, rda, rds, rdata, sas7bdat, xls, xlsx, xpt.","code":""},{"path":"https://fetch.r-sassy.org/reference/engines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of engine types — engines","text":"","code":"engines"},{"path":"https://fetch.r-sassy.org/reference/engines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of engine types — engines","text":"object class etype length 9.","code":""},{"path":"https://fetch.r-sassy.org/reference/engines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A list of engine types — engines","text":"engine parameter string.","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/reference/engines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list of engine types — engines","text":"","code":"#' # Get data directory pkg <- system.file(\"extdata\", package = \"fetch\")  # Create catalog ct <- catalog(pkg, engines$csv)  # Example 1: Catalog all rows  # View catalog ct # data catalog: 6 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Items:   # data item 'ADAE': 56 cols 150 rows   # data item 'ADEX': 17 cols 348 rows   # data item 'ADPR': 37 cols 552 rows   # data item 'ADPSGA': 42 cols 695 rows   # data item 'ADSL': 56 cols 87 rows   # data item 'ADVS': 37 cols 3617 rows"},{"path":"https://fetch.r-sassy.org/reference/fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch a dataset from a data catalog — fetch","title":"Fetch a dataset from a data catalog — fetch","text":"fetch function retrieves dataset data catalog.  function accepts catalog item first parameter.  catalog item required parameter. \"select\" parameter allows pull columns.  \"\" \"top\" parameters may used define subset data retrieve.  \"import_specs\" parameter accepts import_spec object, can used control data read data frame.","code":""},{"path":"https://fetch.r-sassy.org/reference/fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch a dataset from a data catalog — fetch","text":"","code":"fetch(catalog, select = NULL, where = NULL, top = NULL, import_specs = NULL)"},{"path":"https://fetch.r-sassy.org/reference/fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch a dataset from a data catalog — fetch","text":"catalog catalog item fetch data .  Catalog items created using catalog function. select vector column names column numbers extract data item. Note column names can easily obtained vector catalog item, manipulated suit needs. optional expression used filter fetched data. Use base R expression function define expression.   expression allows logical operators Base R functions. Column names can unquoted. top number records return head data item. Valid value integer. import_specs import specs use fetch operation. Import specs can used control data types fetched dataset. import specification created import_spec function. See documentation function additional details example.","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/reference/fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch a dataset from a data catalog — fetch","text":"","code":"# Get data directory pkg <- system.file(\"extdata\", package = \"fetch\")  # Create catalog ct <- catalog(pkg, engines$csv)  # View catalog ct # data catalog: 6 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Items:   # data item 'ADAE': 56 cols 150 rows   # data item 'ADEX': 17 cols 348 rows   # data item 'ADPR': 37 cols 552 rows   # data item 'ADPSGA': 42 cols 695 rows   # data item 'ADSL': 56 cols 87 rows   # data item 'ADVS': 37 cols 3617 rows  # Example 1: Fetch Entire Dataset  # Get data from the catalog dat1 <- fetch(ct$ADEX)  # View Data dat1 # A tibble: 348 × 17                                                                                       #   STUDYID USUBJID   SUBJID SITEID TRTP  TRTPN TRTA  TRTAN RANDFL SAFFL #   <chr>   <chr>     <chr>  <chr>  <chr> <dbl> <chr> <dbl> <chr>  <chr> #  1 ABC     ABC-01-0… 049    01     ARM D     4 ARM D     4 Y      Y     #  2 ABC     ABC-01-0… 049    01     ARM D     4 ARM D     4 Y      Y     #  3 ABC     ABC-01-0… 049    01     ARM D     4 ARM D     4 Y      Y     #  4 ABC     ABC-01-0… 049    01     ARM D     4 ARM D     4 Y      Y     #  5 ABC     ABC-01-0… 050    01     ARM B     2 ARM B     2 Y      Y     #  6 ABC     ABC-01-0… 050    01     ARM B     2 ARM B     2 Y      Y     #  7 ABC     ABC-01-0… 050    01     ARM B     2 ARM B     2 Y      Y     #  8 ABC     ABC-01-0… 050    01     ARM B     2 ARM B     2 Y      Y     #  9 ABC     ABC-01-0… 051    01     ARM A     1 ARM A     1 Y      Y     # 10 ABC     ABC-01-0… 051    01     ARM A     1 ARM A     1 Y      Y     #  338 more rows #  7 more variables: MITTFL <chr>, PPROTFL <chr>, PARAM <chr>, #  PARAMCD <chr>, PARAMN <dbl>, AVAL <dbl>, AVALCAT1 <chr> #  Use `print(n = ...)` to see more rows  # Example 2: Fetch a Subset  # Get data with selected columns and where expression dat2 <- fetch(ct$ADEX, select = c(\"SUBJID\", \"TRTA\", \"RANDFL\", \"SAFFL\"),               where = expression(SUBJID == '051'))  # View Data dat2 # A tibble: 4 x 4 #   SUBJID TRTA  RANDFL SAFFL #   <chr>  <chr> <chr>  <chr> # 1 051    ARM A Y      Y     # 2 051    ARM A Y      Y     # 3 051    ARM A Y      Y     # 4 051    ARM A Y      Y"},{"path":"https://fetch.r-sassy.org/reference/fetchpackage.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data from many data sources — fetchpackage","title":"Fetch data from many data sources — fetchpackage","text":"fetch package allows retrieve data many different data sources.  package retrieves data memory-efficient manner. first identify data defining data catalog.  fetch data catalog.  Catalogs can defined many popular  data formats: csv, rds, sas7bdat, excel, etc. functions contained fetch package follows: catalog: Creates data library fetch: Creates data dictionary import_spec: Defines import spec specific dataset","code":""},{"path":"https://fetch.r-sassy.org/reference/import_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Import Specification — import_spec","title":"Create an Import Specification — import_spec","text":"function create import specifications  particular data file.  information can used  catalog fetch functions correctly assign  data types  columns imported data. import specifications defined  name/value pairs, name column name value data type indicator.  Available data type indicators  'guess', 'logical', 'character', 'integer', 'numeric', 'date', 'datetime', 'time'. Also note multiple import specifications can combined collection, assigned entire catalog.  See specs function example using specs collection.","code":""},{"path":"https://fetch.r-sassy.org/reference/import_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Import Specification — import_spec","text":"","code":"import_spec(..., na = NULL, trim_ws = NULL)"},{"path":"https://fetch.r-sassy.org/reference/import_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Import Specification — import_spec","text":"... Named pairs column names column data types, separated commas. Available types : 'guess', 'logical', 'character', 'integer', 'numeric', 'date', 'datetime', 'time'.  date/time data types accept optional input format.  supply input format, append data type following equals sign, e.g.: 'date=%d%b%Y'  'datetime=%d-%m-%Y %H:%M:%S'. Default NULL, meaning column  types specified, function make best  guess column. na vector values treated NA.  example,  vector c('', ' ') cause empty strings single blanks  converted NA values. Default NULL, meaning value  na parameter taken specs function. value supplied import_spec function override  value specs function. trim_ws Whether trim white space input data values. default NULL, meaning value trim_ws parameter taken specs function.  value supplied  import_spec function override value  specs function.","code":""},{"path":"https://fetch.r-sassy.org/reference/import_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Import Specification — import_spec","text":"import specification object.","code":""},{"path":"https://fetch.r-sassy.org/reference/import_spec.html","id":"date-time-format-codes","dir":"Reference","previous_headings":"","what":"Date/Time Format Codes","title":"Create an Import Specification — import_spec","text":"common date formatting codes.  complete list, see documentation strptime function: %d = day number %= abbreviated weekday %= unabbreviated weekday %m = month number %b = abbreviated month name %B = unabbreviated month name %y = 2-digit year %Y = 4-digit year %H = hour %M = minute %S = second %p = /PM indicator","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/reference/import_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Import Specification — import_spec","text":"","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")  # Create import spec spc <- import_spec(TRTSDT = \"date=%d%b%Y\",                    TRTEDT = \"date=%d%b%Y\")  # Create catalog without filter ct <- catalog(pkg, engines$csv, import_specs = spc)  # Get dictionary for ADVS with Import Spec d <- ct$ADVS  # Observe data types for TRTSDT and TRTEDT are now Dates d[d$Column %in% c(\"TRTSDT\", \"TRTEDT\"), ] # data item 'ADVS': 37 cols 3617 rows #- Engine: csv #- Size: 1.1 Mb #- Last Modified: 2020-09-18 14:30:22 #   Name Column Class Label Format NAs MaxChar #16 ADVS TRTSDT  Date  <NA>     NA  54      10 #17 ADVS TRTEDT  Date  <NA>     NA 119      10"},{"path":"https://fetch.r-sassy.org/reference/print.dcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a data catalog — print.dcat","title":"Print a data catalog — print.dcat","text":"class-specific instance print function  data catalog.  function prints catalog summary manner.   Use verbose = TRUE option print catalog list.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.dcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a data catalog — print.dcat","text":"","code":"# S3 method for dcat print(x, ..., verbose = FALSE)"},{"path":"https://fetch.r-sassy.org/reference/print.dcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a data catalog — print.dcat","text":"x catalog print. ... follow-parameters. verbose Whether print catalog verbose style. default, parameter FALSE, meaning print summary style.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.dcat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a data catalog — print.dcat","text":"object, invisibly.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.dcat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a data catalog — print.dcat","text":"","code":"# Get data directory pkg <- system.file(\"extdata\", package = \"fetch\")  # Create catalog ct <- catalog(pkg, engines$csv)  # View catalog print(ct) # data catalog: 6 items # - Source: C:/packages/fetch/inst/extdata # - Engine: csv # - Items:   # data item 'ADAE': 56 cols 150 rows   # data item 'ADEX': 17 cols 348 rows   # data item 'ADPR': 37 cols 552 rows   # data item 'ADPSGA': 42 cols 695 rows   # data item 'ADSL': 56 cols 87 rows   # data item 'ADVS': 37 cols 3617 rows"},{"path":"https://fetch.r-sassy.org/reference/print.dinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a data catalog item — print.dinfo","title":"Print a data catalog item — print.dinfo","text":"class-specific instance print function  data catalog items.  function prints info summary manner.   Use verbose = TRUE print data info list.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.dinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a data catalog item — print.dinfo","text":"","code":"# S3 method for dinfo print(x, ..., verbose = TRUE)"},{"path":"https://fetch.r-sassy.org/reference/print.dinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a data catalog item — print.dinfo","text":"x library print. ... follow-parameters. verbose Whether print info verbose style. default, parameter FALSE, meaning print summary style. Verbose style includes full data dictionary printing  attributes.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.dinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a data catalog item — print.dinfo","text":"object, invisibly.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.specs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print import specifications — print.specs","title":"Print import specifications — print.specs","text":"function print import specification collection.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.specs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print import specifications — print.specs","text":"","code":"# S3 method for specs print(x, ..., verbose = FALSE)"},{"path":"https://fetch.r-sassy.org/reference/print.specs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print import specifications — print.specs","text":"x specifications print. ... follow-parameters print function. verbose Whether print specifications verbose style. default, parameter FALSE, meaning print summary style.","code":""},{"path":"https://fetch.r-sassy.org/reference/print.specs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print import specifications — print.specs","text":"specification object, invisibly.","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/reference/read.specs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read import specs from the file system — read.specs","title":"Read import specs from the file system — read.specs","text":"function read import specifications file system. function accepts full relative path spec file, returns specs object.  file_path parameter passed directory name, function search file '.specs' extension read .","code":""},{"path":"https://fetch.r-sassy.org/reference/read.specs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read import specs from the file system — read.specs","text":"","code":"read.specs(file_path = getwd())"},{"path":"https://fetch.r-sassy.org/reference/read.specs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read import specs from the file system — read.specs","text":"file_path full relative path file system.  Default current working directory. file_path file name  contain '.specs' file extension, function add extension.  file_path contains directory name,  function search directory file extension  '.specs'.  one file extension '.specs' founds,  function generate error.","code":""},{"path":"https://fetch.r-sassy.org/reference/read.specs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read import specs from the file system — read.specs","text":"specifications object.","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/reference/specs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Import Spec Collection — specs","title":"Create an Import Spec Collection — specs","text":"function create collection import specifications  data source.  specs can used  catalog function correctly assign data types uniquely  different imported data files. spec collection set import_spec objects identified name/value pairs.  name corresponds name input dataset, without file extension. value import_spec object use dataset.  way, may define different specs dataset catalog. import engines guess data types columns explicitly defined import specifications.  import spec syntax data engines. Note na trim_ws parameters specs  function applied globally files library.   global settings can overridden import_spec  particular data file. Also note specs collection defined object  can stored reused. See write.specs read.specs functions additional information saving restoring specs.","code":""},{"path":"https://fetch.r-sassy.org/reference/specs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Import Spec Collection — specs","text":"","code":"specs(..., na = c(\"\", \"NA\"), trim_ws = TRUE)"},{"path":"https://fetch.r-sassy.org/reference/specs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Import Spec Collection — specs","text":"... Named input specs.  name correspond file name, without file extension. spec defined import_spec object.  See  import_spec function additional information  parameters object. na vector values treated NA.  example,  vector c('', ' ') cause empty strings single blanks  converted NA values. file types,  empty strings string 'NA' ('', 'NA') considered NA.   SAS® datasets transport files, single blank single dot  c(\" \", \".\") considered NA. value  na parameter specs function can overridden na parameter import_spec function. trim_ws Whether trim white space input data values. Valid values TRUE, FALSE.  Default TRUE.  value  trim_ws parameter specs function can overridden trim_ws parameter import_spec function.","code":""},{"path":"https://fetch.r-sassy.org/reference/specs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Import Spec Collection — specs","text":"specifications collection object.","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/reference/specs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Import Spec Collection — specs","text":"","code":"# Get sample data directory pkg <- system.file(\"extdata\", package = \"fetch\")  # Create import spec spc <- specs(ADAE = import_spec(TRTSDT = \"date=%d%b%Y\",                                 TRTEDT = \"date=%d%b%Y\"),              ADVS = import_spec(TRTSDT = \"character\",                                 TRTEDT = \"character\"))  # Create catalog with specs collection ct <- catalog(pkg, engines$csv, import_specs = spc)  # Get dictionary for ADAE with Import Spec d1 <- ct$ADAE  # Observe data types for TRTSDT and TRTEDT are Dates d1[d1$Column %in% c(\"TRTSDT\", \"TRTEDT\"), ] # data item 'ADAE': 56 cols 150 rows #- Engine: csv #- Size: 155 Kb #- Last Modified: 2020-09-18 14:30:22 #   Name Column Class Label Format NAs MaxChar #13 ADAE TRTSDT  Date  <NA>     NA   1      10 #14 ADAE TRTEDT  Date  <NA>     NA   4      10  # Get dictionary for ADVS with Import Spec d2 <- ct$ADVS  # Observe data types for TRTSDT and TRTEDT are character d2[d2$Column %in% c(\"TRTSDT\", \"TRTEDT\"), ] # data item 'ADVS': 37 cols 3617 rows #- Engine: csv #- Size: 1.1 Mb #- Last Modified: 2020-09-18 14:30:22 #   Name Column     Class Label Format NAs MaxChar #16 ADVS TRTSDT character  <NA>     NA  54       9 #17 ADVS TRTEDT character  <NA>     NA 119       9"},{"path":"https://fetch.r-sassy.org/reference/write.specs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write import specs to the file system — write.specs","title":"Write import specs to the file system — write.specs","text":"function write import specifications file system. function accepts specifications object full relative path.  function returns full file path.  function  useful can define import specifications , reuse multiple programs across multiple teams.","code":""},{"path":"https://fetch.r-sassy.org/reference/write.specs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write import specs to the file system — write.specs","text":"","code":"write.specs(x, dir_path = getwd(), file_name = NULL)"},{"path":"https://fetch.r-sassy.org/reference/write.specs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write import specs to the file system — write.specs","text":"x specifications object class 'specs'. dir_path full relative path save specs. Default  current working directory. file_name file name save specs, without file extension. '.specs' file extension added automatically.  file name  supplied, function use variable name file name.","code":""},{"path":"https://fetch.r-sassy.org/reference/write.specs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write import specs to the file system — write.specs","text":"full file path.","code":""},{"path":[]},{"path":"https://fetch.r-sassy.org/news/index.html","id":"fetch-010","dir":"Changelog","previous_headings":"","what":"fetch 0.1.0","title":"fetch 0.1.0","text":"Added catalog() fetch() functions. Added specs() import_spec() functions. Added print functions objects. Added NEWS.md file track changes package. Wrote documentation. Created web site.","code":""}]
